#!/usr/bin/env node
// Copyright (c) 2015 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

'use strict';

var readdirp = require('readdirp');
var minimist = require('minimist');
var fs = require('fs');

var argv = minimist(process.argv.slice(2));
var cwd = process.cwd();
var stream = readdirp({
    root: cwd,
    fileFilter: ['*.js'],
    directoryFilter: [ '!.git', '!node_modules', '!coverage' ]
});

stream.on('data', function onData(e) {
    checkFile(e.path);
});

var valid = [
    '#!/usr/bin/env node\n' +
    '\n' +
    '// Copyright (c) 2015 Uber Technologies, Inc.\n' +
    '//\n' +
    '// Permission is hereby granted, free of charge, to any person obtaining a copy\n' +
    '// of this software and associated documentation files (the "Software"), to deal\n' +
    '// in the Software without restriction, including without limitation the rights\n' +
    '// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n' +
    '// copies of the Software, and to permit persons to whom the Software is\n' +
    '// furnished to do so, subject to the following conditions:\n' +
    '//\n' +
    '// The above copyright notice and this permission notice shall be included in\n' +
    '// all copies or substantial portions of the Software.\n' +
    '//\n' +
    '// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n' +
    '// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n' +
    '// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n' +
    '// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n' +
    '// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n' +
    '// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n' +
    '// THE SOFTWARE.',

    '#!/usr/bin/env node\n' +
    '// Copyright (c) 2015 Uber Technologies, Inc.\n' +
    '//\n' +
    '// Permission is hereby granted, free of charge, to any person obtaining a copy\n' +
    '// of this software and associated documentation files (the "Software"), to deal\n' +
    '// in the Software without restriction, including without limitation the rights\n' +
    '// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n' +
    '// copies of the Software, and to permit persons to whom the Software is\n' +
    '// furnished to do so, subject to the following conditions:\n' +
    '//\n' +
    '// The above copyright notice and this permission notice shall be included in\n' +
    '// all copies or substantial portions of the Software.\n' +
    '//\n' +
    '// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n' +
    '// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n' +
    '// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n' +
    '// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n' +
    '// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n' +
    '// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n' +
    '// THE SOFTWARE.',

    '// Copyright (c) 2015 Uber Technologies, Inc.\n' +
    '//\n' +
    '// Permission is hereby granted, free of charge, to any person obtaining a copy\n' +
    '// of this software and associated documentation files (the "Software"), to deal\n' +
    '// in the Software without restriction, including without limitation the rights\n' +
    '// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n' +
    '// copies of the Software, and to permit persons to whom the Software is\n' +
    '// furnished to do so, subject to the following conditions:\n' +
    '//\n' +
    '// The above copyright notice and this permission notice shall be included in\n' +
    '// all copies or substantial portions of the Software.\n' +
    '//\n' +
    '// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n' +
    '// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n' +
    '// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n' +
    '// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n' +
    '// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n' +
    '// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n' +
    '// THE SOFTWARE.'
];

function checkFile(path) {
    fs.readFile(path, 'utf8', onContent);

    function onContent(err, content) {
        if (err) {
            throw err;
        }

        var isValid = content.indexOf(valid[0]) === 0 ||
            content.indexOf(valid[1]) === 0 ||
            content.indexOf(valid[2]) === 0;

        if (isValid) {
            return;
        }

        var lines = content.split('\n');

        console.log('invalid file', {
            file: path,
            content: lines.slice(0, 3)
        });

        if (argv.dry) {
            return;
        }

        appendFile(path, content);
    }
}

function appendFile(path, content) {
    var properContent = valid[2] + '\n\n' + content;

    fs.writeFile(path, properContent, onWrite);

    function onWrite(err) {
        if (err) {
            throw err;
        }

        console.log('fixed file', {
            path: path
        });
    }
}

